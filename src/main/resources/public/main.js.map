{"version":3,"sources":["./src/app/job-details.service.ts","./src/app/job-details-list/job-details-list.component.ts","./src/app/job-details-list/job-details-list.component.html","./src/app/search-filter/search-filter.component.ts","./src/app/search-filter/search-filter.component.html","./src/environments/environment.ts","./src/app/company-job/company-job.component.ts","./src/app/company-job/company-job.component.html","./src/app/company-job-list/company-job-list.component.ts","./src/app/company-job-list/company-job-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/company-job-list.service.ts","./src/app/constants.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { JobDetails } from './job-details';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CompanyJob } from './company-job';\nimport { Constants } from './constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobDetailsService {\n\n  url :string  = Constants.rootUrl + \"/companyjob\";\n\n  constructor(private http: HttpClient) {} \n\n  fetchJobDetails(jdmJobDescHistoryID: string): Promise<JobDetails> { \n    return this.http.get<JobDetails>(this.url + \"?jdmJobDescHistoryID=\" + jdmJobDescHistoryID).toPromise();\n  }\n \n \n}\n","import { JobDetails } from './../job-details';\nimport { Component, Input, OnInit, AfterViewInit, OnChanges, SimpleChanges, AfterContentChecked } from '@angular/core';\nimport { JobDetailsService } from '../job-details.service';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-job-details-list',\n  templateUrl: './job-details-list.component.html',\n  styleUrls: ['./job-details-list.component.css']\n})\nexport class JobDetailsListComponent implements OnInit, AfterViewInit, OnChanges {\n\n  @Input() selectedDetailIDs: string[];\n  jobDetailsList: JobDetails[] = [];\n  dataSource: MatTableDataSource<JobDetails> = new MatTableDataSource(this.jobDetailsList);\n  displayedColumns: string[] = ['JobCode'];\n\n  panelOpenState = false;\n\n  constructor() { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log(\"JobDetailsListComponent -> ngOnChanges! \" + this.jobDetailsList.length);\n    this.dataSource = new MatTableDataSource(this.jobDetailsList);\n}\n\n  ngAfterViewInit(): void {\n  }\n\n  ngOnInit(): void {\n  }\n\n\n\n\n\n\n}\n","<div id=\"jobDetailsDiv\" >\n\n    <table class=\"tblSelectedJobDetails\" *ngFor=\"let jobId of selectedDetailIDs\">\n      <tr>\n        <td>\n          <app-company-job [jdmJobDescHistoryID]=jobId></app-company-job>\n        </td>\n      </tr>\n    </table>\n\n</div>","import { state } from '@angular/animations';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Component, EventEmitter, Input, OnInit, Output, OnChanges, SimpleChanges, ViewChildren, ViewChild } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { CompanyJob } from '../company-job';\nimport { MatChip, MatChipList, MatChipListChange, MatChipSelectionChange } from '@angular/material/chips';\nimport { QueryList } from '@angular/core';\n\n@Component({\n  selector: 'app-search-filter',\n  templateUrl: './search-filter.component.html',\n  styleUrls: ['./search-filter.component.css']\n})\nexport class SearchFilterComponent implements OnInit, OnChanges {\n\n  @ViewChild('matChipList') matChipList: MatChipList;\n\n  @Input() companyJobs!: CompanyJob[];\n  @Input() displayedColumns: string[];\n  @Input() jobFamilies: string[];\n\n  @Output() filterChanged: EventEmitter<CompanyJob[]> =   new EventEmitter();\n  filteredJobs!: CompanyJob[];\n\n  selectedFilter = \"\"\n  searchForm = this.formBuilder.group({\n    searchText: [''],\n    searchFilter: ['']\n  })\n  \n  constructor(private formBuilder: FormBuilder) { }\n  ngOnChanges(changes: SimpleChanges): void {}\n\n\n  ngOnInit(): void {\n    this.filteredJobs = [...this.companyJobs]\n    this.filterChanged.emit(this.filteredJobs);\n  }\n\n  clickClear() {\n    this.filteredJobs = [...this.companyJobs]\n    this.searchForm.reset();\n    this.filterChanged.emit(this.filteredJobs);\n    var chips = this.matChipList.chips;\n    for (var chip of chips) {\n      chip.selected = false;\n    }\n  }\n\n  clickSearch() {\n    console.log(\"hey! \" + JSON.stringify(this.searchForm.value['searchText']));\n    var searchText: string = this.searchForm.value['searchText'];\n    var searchFilter: string = this.searchForm.value['searchFilter'];\n    this.filteredJobs = []\n    for (var job of this.companyJobs) {\n      if (searchText.length > 0) {\n        if (searchFilter && searchFilter.length > 0 && searchFilter != 'select') {// filter has been selected...\n          var checkField: string = String(job[searchFilter]);\n          if (checkField.includes(searchText)) {\n            this.filteredJobs.push(job)\n          }\n        }\n        else {// no filter, check every field ...\n          for (var column of this.displayedColumns) {\n            if (column != 'select'){\n              var col = String(job[column]);\n              if ((job[column]) && (col.includes(searchText))) {\n                if (!this.filteredJobs.includes(job)) {\n                  this.filteredJobs.push(job)\n                }\n              }\n            }\n          }\n          //CompanyJobDesc is not included in the table columns\n          if ((job[\"CompanyJobDesc\"]) && (job[\"CompanyJobDesc\"].includes(searchText))) {\n            if (!this.filteredJobs.includes(job)) {\n              this.filteredJobs.push(job)\n            }\n          }\n        }\n        this.filteredJobs = [...this.filteredJobs]; //alerts the angular change detection mechanism\n    \n      } else {\n        //no search text, do nothing\n      }\n    }\n    this.filterChanged.emit(this.filteredJobs);\n  }\n\n  toggleSelection(chip: MatChip) {\n    console.log(\"chip.selected? \" + chip.selected);\n    this.clickClear();\n    chip.toggleSelected();\n\n    if (chip.selected) {\n      console.log(\"chip.selected\");\n      var temp: CompanyJob[] = [];\n      var filterArray: CompanyJob[] = [];\n      if (this.filteredJobs.length > 0){\n        filterArray = [...this.filteredJobs];\n      } else {\n        filterArray = [...this.companyJobs];\n      }\n      for (var job of filterArray) {\n        if (job.JobFamily === chip.value) {\n          temp.push(job)\n        }\n      }\n      this.filteredJobs = [...temp];\n    } else {\n      console.log(\"NOT chip.selected\");\n      this.filteredJobs = [...this.companyJobs];\n    }\n    this.filterChanged.emit(this.filteredJobs);\n\n }\n\n\n\n\n}\n","<form [formGroup]=\"searchForm\" class=\"example-form\">\n  <div id=\"divSearchFilters\" class='mat-elevation-z6'>\n    <div id=\"divFilterButtons\">\n      <mat-chip-list #matChipList='matChipList' selectable>\n        <mat-chip #c=\"matChip\" (click)=\"toggleSelection(c)\" *ngFor=\"let fam of jobFamilies;\">{{fam}}</mat-chip>\n      </mat-chip-list>\n    </div>\n\n    <div id='divJobSearch' class='mat-elevation-z6'>\n\n      <mat-form-field id=\"filter-field\">\n        <mat-label>Filter on...</mat-label>\n        <select formControlName=\"searchFilter\" matNativeControl>\n          <!--<option value=\"\">&nbsp;</option>-->\n          <option value=\"{{column}}\" *ngFor=\"let column of displayedColumns\">{{column}}</option>\n          <option value=\"CompanyJobDesc\">CompanyJobDesc</option>\n        </select>\n      </mat-form-field>\n      <i class=\"fa fa-filter filterFunnel\" aria-hidden=\"true\"></i>\n\n      <mat-form-field id=\"search-field\">\n        <mat-label>Search Text</mat-label>\n        <input formControlName=\"searchText\" matInput placeholder=\"Some text\" value=\"\">\n      </mat-form-field>\n      <i class=\"fa fa-search fa-1 searchGlass\" aria-hidden=\"true\" (click)='clickSearch()'></i>\n\n      <button class='hidden' mat-raised-button (click)='clickSearch()'>Submit</button>\n      <!--<button mat-raised-button (click)='clickClear()'>Clear</button>-->\n\n    </div>\n\n    <button id=\"clearSearch\"  (click)='clickClear()'>Clear</button>\n\n  </div>\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { AfterViewInit, Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { CompanyJob } from '../company-job';\nimport { JobDetails } from '../job-details';\nimport { JobDetailsService } from '../job-details.service';\n\n@Component({\n  selector: 'app-company-job',\n  templateUrl: './company-job.component.html',\n  styleUrls: ['./company-job.component.css']\n})\nexport class CompanyJobComponent implements OnInit, AfterViewInit {\n\n  @Input() jdmJobDescHistoryID: string;\n  jobDetails: JobDetails;\n  keys: string[] = [];\n\n  constructor(private jobDetailsService: JobDetailsService) { }\n\n  ngAfterViewInit(): void {\n  }\n\n  ngOnInit(): void {\n    this.fetchJobDetails(this.jdmJobDescHistoryID);\n  }\n\n  public fetchJobDetails(jdmJobDescHistoryID: string) {\n    console.log(\"CompanyJobComponent fetchJobDetails! \" + jdmJobDescHistoryID)\n    this.jobDetailsService.fetchJobDetails(jdmJobDescHistoryID)\n      .then(res => {\n        console.log(\"fetched result: \" + (res));\n        var details: JobDetails = res as JobDetails;\n        console.log(\"DETAILS: [\" + details.JDMJobDescHistoryID + \"]\");\n        this.jobDetails = details;\n        for (let key in details){\n          //key = key.split(\"_\").join(\" \");\n          console.log(\"key: \" + key);\n          this.keys.push(key);\n        }\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }\n\n\n\n}\n","<div class=\"jobdetailscard mat-table cdk-table mat-elevation-z8 ng-tns-c138-0\">\n\n  <mat-accordion class=\"example-card\">\n    <mat-expansion-panel hideToggle>\n\n      <mat-expansion-panel-header *ngIf=\"jobDetails != null; else fetching\">\n        <mat-panel-title>\n          {{jobDetails.CompanyJobTitle}} [click for details]\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <ng-template #fetching>\n        <mat-panel-title>\n          fetching...\n        </mat-panel-title>\n      </ng-template>\n\n      <table id=\"tblJobDetails\">\n        <tr class=\"jobDetailsRow\" *ngFor=\"let key of keys;\">\n          <th class=\"jobDetailsHeader\">{{key.split(\"_\").join(\" \")}}</th>\n          <td class=\"jobDetailsCell\">{{jobDetails[key]}}</td>\n        </tr>\n\n        </table>\n\n      <!--\n      <table id=\"tblJobDetails\" *ngIf=\"jobDetails != null\">\n        <tr>\n          <th>Job Title</th>\n          <td>{{jobDetails.CompanyJobTitle}}</td>\n        </tr>\n        <tr>\n          <th>Organization</th>\n          <td>{{jobDetails.UDF_Organization}}</td>\n        </tr>\n        <tr>\n          <th>Date</th>\n          <td>{{jobDetails.UDF_Date}}</td>\n        </tr>\n        <tr>\n          <th>Department</th>\n          <td>{{jobDetails.UDF_Department}}</td>\n        </tr>\n        <tr>\n          <th>Comments</th>\n          <td>{{jobDetails.UDF_Comments}}</td>\n        </tr>\n        <tr>\n          <th>FLSA Classification</th>\n          <td>{{jobDetails.UDF_FLSA_Classification}}</td>\n        </tr>\n        <tr>\n          <th>Pay Grade</th>\n          <td>{{jobDetails.UDF_Pay_Grade}}</td>\n        </tr>\n        <tr>\n          <th>Large Functional Group</th>\n          <td>{{jobDetails.UDF_Large_Functional_Group}}</td>\n        </tr>\n        <tr>\n          <th>Job Family</th>\n          <td>{{jobDetails.UDF_Job_Family}}</td>\n        </tr>\n        <tr>\n          <th>Minimum Education Requirement</th>\n          <td>{{jobDetails.UDF_Minimum_Education_Requirement}}</td>\n        </tr>\n        <tr>\n          <th>Minimum Experience Requirement</th>\n          <td>{{jobDetails.UDF_Minimum_Experience_Requirement}}</td>\n        </tr>\n        <tr>\n          <th>Position Designation</th>\n          <td>{{jobDetails.UDF_Position_Designation}}</td>\n        </tr>\n        <tr>\n          <th>Locations Safety Sensitive</th>\n          <td>{{jobDetails.UDF_Locations_applicable_to_Safety_Sensitive_for_this_position}}</td>\n        </tr>\n        <tr>\n          <th>Essential Duties and Responsibilities</th>\n          <td>{{jobDetails.UDF_Essential_Duties_and_Responsibilities}}</td>\n        </tr>\n        <tr>\n          <th>Education Detail</th>\n          <td>{{jobDetails.UDF_Education_Detail}}</td>\n        </tr>\n        <tr>\n          <th>Experience Detail</th>\n          <td>{{jobDetails.UDF_Experience_Detail}}</td>\n        </tr>\n        <tr>\n          <th>Qualifications and Competencies</th>\n          <td>{{jobDetails.UDF_Qualifications_and_Competencies}}</td>\n        </tr>\n        <tr>\n          <th>Nature of Work</th>\n          <td>{{jobDetails.UDF_Nature_of_Work}}</td>\n        </tr>\n        <tr>\n          <th>Physical Requirements</th>\n          <td>{{jobDetails.UDF_Physical_Requirements}}</td>\n        </tr>\n\n        <tr>\n          <th>JDMJobDescHistoryID</th>\n          <td>{{jobDetails.JDMJobDescHistoryID}}</td>\n        </tr>\n        <tr>\n          <th>CompanyJobCode</th>\n          <td>{{jobDetails.CompanyJobCode}}</td>\n        </tr>\n        <tr>\n          <th>CompanyJobTitle</th>\n          <td>{{jobDetails.CompanyJobTitle}}</td>\n        </tr>\n\n        <tr>\n          <th>JobFamily</th>\n          <td>{{jobDetails.JobFamily}}</td>\n        </tr>\n        <tr>\n          <th>CompanyJobDesc</th>\n          <td>{{jobDetails.CompanyJobDesc}}</td>\n        </tr>\n        <tr>\n          <th>JobFLSAStatusDesc</th>\n          <td>{{jobDetails.JobFLSAStatusDesc}}</td>\n        </tr>\n        \n        <tr>\n          <th>CompanyJobSummary</th>\n          <td>{{jobDetails.CompanyJobSummary}}</td>\n        </tr>\n      \n        <tr>\n          <th>Experience</th>\n          <td>{{jobDetails.Experience}}</td>\n        </tr>\n        <tr>\n          <th>CompetencyNames</th>\n          <td>{{jobDetails.CompetencyNames}}</td>\n        </tr>\n        <tr>\n          <th>Skills</th>\n          <td>{{jobDetails.Skills}}</td>\n        </tr>\n        <tr>\n          <th>ReportsTo</th>\n          <td>{{jobDetails.ReportsTo}}</td>\n        </tr>\n        <tr>\n          <th>CertificateLicenses</th>\n          <td>{{jobDetails.CertificateLicenses}}</td>\n        </tr>\n        <tr>\n          <th>ManagePeople</th>\n          <td>{{jobDetails.ManagePeople}}</td>\n        </tr>\n        <tr>\n          <th>EducationDesc</th>\n          <td>{{jobDetails.EducationDesc}}</td>\n        </tr>\n        <tr>\n          <th>TimeSpents</th>\n          <td>{{jobDetails.TimeSpents}}</td>\n        </tr>\n\n        <tr>\n          <th>TierCode</th>\n          <td>{{jobDetails.TierCode}}</td>\n        </tr>\n        <tr>\n          <th>TierDesc</th>\n          <td>{{jobDetails.TierDesc}}</td>\n        </tr>\n        <tr>\n          <th>JobFocus</th>\n          <td>{{jobDetails.JobFocus}}</td>\n        </tr>\n        <tr>\n          <th>JobFunction</th>\n          <td>{{jobDetails.JobFunction}}</td>\n        </tr>\n        <tr>\n          <th>LastApprovedByUName</th>\n          <td>{{jobDetails.LastApprovedByUName}}</td>\n        </tr>\n        <tr>\n          <th>LastApprovedDate</th>\n          <td>{{jobDetails.LastApprovedDate}}</td>\n        </tr>\n        <tr>\n          <th>LastUpdateByUName</th>\n          <td>{{jobDetails.LastUpdateByUName}}</td>\n        </tr>\n        <tr>\n          <th>LastUpdateDate</th>\n          <td>{{jobDetails.LastUpdateDate}}</td>\n        </tr>\n        <tr>\n          <th>LastPublishedByUName</th>\n          <td>{{jobDetails.LastPublishedByUName}}</td>\n        </tr>\n        <tr>\n          <th>LastPublishedDate</th>\n          <td>{{jobDetails.LastPublishedDate}}</td>\n        </tr>\n        <tr>\n          <th>CompanyJobDescStatusCode</th>\n          <td>{{jobDetails.CompanyJobDescStatusCode}}</td>\n        </tr>\n        <tr>\n          <th>CompanyJobDescStatusDesc</th>\n          <td>{{jobDetails.CompanyJobDescStatusDesc}}</td>\n        </tr>\n      </table>\n\n      -->\n\n\n    </mat-expansion-panel>\n  </mat-accordion>\n\n</div>","import { JobDetailsService } from './../job-details.service';\nimport { Component, OnInit, ViewChild, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { CompanyJob } from '../company-job';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\n\n\n@Component({\n  selector: 'app-company-job-list',\n  templateUrl: './company-job-list.component.html',\n  styleUrls: ['./company-job-list.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\n\nexport class CompanyJobListComponent implements OnInit, OnChanges {\n\n  @Input() companyJobs!: CompanyJob[];\n  @Input() jobFamilies!: string[];\n  filteredJobs: CompanyJob[];\n  selectedDetailIDs: string[] = [];\n\n  dataSource: MatTableDataSource<CompanyJob> = new MatTableDataSource(this.companyJobs);\n  selection: SelectionModel<CompanyJob> = new SelectionModel<CompanyJob>(true, []);\n  //displayedColumns: string[] = ['select', 'JDMJobDescHistoryID', 'CompanyJobCode', 'CompanyJobTitle', 'JobFamily', 'JobFLSAStatusDesc'];\n  displayedColumns: string[] = ['select', 'CompanyJobCode', 'CompanyJobTitle', 'JobFamily', 'JobFLSAStatusDesc'];\n\n  expandedElement: CompanyJob | null;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private jobDetailsService: JobDetailsService) { }\n\n  onChangeEventFunc(row, evt: MatCheckboxChange) {\n    var checked = evt.checked;\n    var jobId = row.JDMJobDescHistoryID;\n    if (checked === true) {\n      if (this.selectedDetailIDs.indexOf(jobId) < 0) {\n        this.selectedDetailIDs.push(jobId);\n      } else {\n        //jobid already in list\n      }\n    } else {\n      var temp: string[] = [];\n      for (var id of this.selectedDetailIDs) {\n        if (id !== jobId) {// add all jobIds to temp array except the one being unselected\n          temp.push(id);\n        } else {\n          //dont add jobid being unselected\n        }\n      }\n      this.selectedDetailIDs = [...temp];\n    }\n  }\n\n  public filterHandler(filtered: CompanyJob[]) {\n    //console.log(\"filterHandler: \" + (filtered));\n    this.filteredJobs = filtered;\n    if (filtered.length === 0) {\n      this.clearSelections();\n    }\n    this.updateJobList(this.filteredJobs);\n  }\n\n  onNgModelChange(e) {\n    this.selectedDetailIDs = [];\n    console.log(\"onNgModelChange()...\" + String(e));\n    console.log(\"selected: \" + this.selection.selected.length);\n    for (var idx of this.selection.selected.keys()) {\n      var obj = this.selection.selected[idx];\n      var job = obj as CompanyJob;\n      var jobId = job.JDMJobDescHistoryID;\n      console.log(\"key: \" + String(idx) + \"   value: \" + job.JDMJobDescHistoryID);\n      this.selectedDetailIDs.push(jobId);\n    }\n    return true;\n  }\n\n  clearSelections() {\n    this.selectedDetailIDs = [];\n    this.selection.clear();\n    this.dataSource.data.forEach(row => this.selection.deselect(row));\n  }\n\n  updateJobList(jobs: CompanyJob[]) {\n    this.companyJobs = [...this.companyJobs];\n    this.dataSource = new MatTableDataSource(jobs);\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.updateJobList(this.companyJobs);\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. \n   * https://material.angular.io/components/table/overview#selection\n  */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected == numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n}\n","<app-search-filter  \n[companyJobs]=companyJobs \n[jobFamilies]=jobFamilies \n[displayedColumns]=displayedColumns \n(filterChanged)=\"filterHandler($event)\">\n</app-search-filter>\n\n\n<div id='divJobListExpandable'  class=\"mat-elevation-z6\">\n\n \n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 \">\n\n  <ng-container matColumnDef=\"select\">\n    <th mat-header-cell *matHeaderCellDef>\n      &nbsp;\n    </th>\n    <td mat-cell *matCellDef=\"let row\">\n      <mat-checkbox (click)=\"$event.stopPropagation();\"\n                    (change)=\"onChangeEventFunc(row, $event);$event ? selection.toggle(row) : null\"\n                    [checked]=\"selection.isSelected(row)\">\n      </mat-checkbox>\n    </td>\n  </ng-container>\n  \n  <!--\n    <ng-container matColumnDef=\"JDMJobDescHistoryID\">\n      <th mat-header-cell *matHeaderCellDef> ID </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.JDMJobDescHistoryID}} </td>\n    </ng-container>\n  -->\n    <ng-container matColumnDef=\"CompanyJobCode\">\n      <th mat-header-cell *matHeaderCellDef> Job Code </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.CompanyJobCode}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"CompanyJobTitle\">\n      <th mat-header-cell *matHeaderCellDef> Job Title </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.CompanyJobTitle}} </td>\n    </ng-container>\n\n     <ng-container matColumnDef=\"JobFamily\">\n      <th mat-header-cell *matHeaderCellDef> Job Family </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.JobFamily}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"JobFLSAStatusDesc\">\n      <th mat-header-cell *matHeaderCellDef> FLSA Status  </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.JobFLSAStatusDesc}} </td>\n    </ng-container>\n  \n   <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n   <!--\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n        (click)=\"selection.toggle(row)\">\n    </tr>\n  -->\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n    </tr>\n  </table>\n\n  <mat-paginator [pageSizeOptions]=\"[10, 20, 50]\" showFirstLastButtons></mat-paginator>\n\n  <button id=\"clearSelections\"  (click)='clearSelections()'>Clear</button>\n</div>\n\n\n<div id=\"jobDetailsList\">\n  <app-job-details-list [selectedDetailIDs]=selectedDetailIDs></app-job-details-list>\n</div>\n\n\n\n\n\n","import { AfterViewInit, SimpleChanges } from '@angular/core';\nimport { OnChanges } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { CompanyJob } from './company-job';\nimport { CompanyJobListService } from './company-job-list.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, AfterViewInit{\n\n  title = 'companalyst-ng';\n  companyJobs: CompanyJob[] = [];\n  jobFamilies: string[] = [];\n\n  constructor(private jobListService: CompanyJobListService) { }\n\n  ngOnInit(): void {\n    this.fetchCompanyJobList();\n  }\n\n  ngAfterViewInit(): void {\n    this.companyJobs = [...this.companyJobs];\n  }\n\n  public fetchCompanyJobList() {\n    this.jobListService.fetchCompanyJobList()\n      .then(res => {\n        console.log(\"fetched result: \" + (res ));\n        this.companyJobs = res as CompanyJob[];\n        var ct: number = 0;\n        for (let job of this.companyJobs){\n          job.Selected = false;\n          job.Position = ct;\n          var jobFam = job.JobFamily;\n          if (!this.jobFamilies.includes(jobFam) && jobFam != null){\n            this.jobFamilies.push(jobFam);\n          }\n          ct++;\n        }\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }\n  \n}\n","<app-company-job-list [companyJobs]=companyJobs [jobFamilies]=jobFamilies></app-company-job-list> \n\n\n\n\n","import { MatPaginator } from '@angular/material/paginator';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { CompanyJobListComponent } from './company-job-list/company-job-list.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms'\n\nimport {MatInputModule} from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { CompanyJobComponent } from './company-job/company-job.component';\n\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatCardModule} from '@angular/material/card';\nimport { SearchFilterComponent } from './search-filter/search-filter.component';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { JobDetailsListComponent } from './job-details-list/job-details-list.component';\nimport {MatExpansionModule} from '@angular/material/expansion';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CompanyJobListComponent,\n    CompanyJobComponent,\n    SearchFilterComponent,\n    JobDetailsListComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatTabsModule,\n    MatChipsModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatExpansionModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Constants } from './constants';\nimport { CompanyJob } from './company-job';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyJobListService {\n\n  url :string  = Constants.rootUrl + \"companyjoblist\";\n\n  constructor(private http: HttpClient) {} \n\n  fetchCompanyJobList(): Promise<CompanyJob[]> { \n    return this.http.get<CompanyJob[]>(this.url).toPromise();\n  }\n \n \n\n}","export class Constants {\n\n    public static rootUrl: string = \"http://localhost:10001/\";\n    //public static rootUrl: string = \"\";\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}